[{"path":"https://cmu-delphi.github.io/epipredict/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 epipredict authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Bien. Author. Daniel McDonald. Author. Ryan Tibshirani. Author, maintainer.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bien J, McDonald D, Tibshirani R (2022). epipredict: Basic epidemiology forecasting methods. R package version 0.0.1.9000, https://cmu-delphi.github.io/epipredict/.","code":"@Manual{,   title = {epipredict: Basic epidemiology forecasting methods},   author = {Jacob Bien and Daniel McDonald and Ryan Tibshirani},   year = {2022},   note = {R package version 0.0.1.9000},   url = {https://cmu-delphi.github.io/epipredict/}, }"},{"path":"https://cmu-delphi.github.io/epipredict/index.html","id":"epipredict","dir":"","previous_headings":"","what":"Basic epidemiology forecasting methods","title":"Basic epidemiology forecasting methods","text":"Note: package currently development likely work expected.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Basic epidemiology forecasting methods","text":"can install development version epipredict GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"cmu-delphi/epipredict\")"},{"path":"https://cmu-delphi.github.io/epipredict/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Basic epidemiology forecasting methods","text":"basic example shows solve common problem:","code":"library(epipredict) ## basic example code"},{"path":"https://cmu-delphi.github.io/epipredict/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Basic epidemiology forecasting methods","text":"can view documentation main branch https://cmu-delphi.github.io/epipredict.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_args_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ARX forecaster argument constructor — arx_args_list","title":"ARX forecaster argument constructor — arx_args_list","text":"Constructs list arguments arx_forecaster().","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_args_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARX forecaster argument constructor — arx_args_list","text":"","code":"arx_args_list(   lags = c(0, 7, 14),   ahead = 7,   min_train_window = 20,   levels = c(0.05, 0.95),   intercept = TRUE,   symmetrize = TRUE,   nonneg = TRUE,   quantile_by_key = FALSE )"},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_args_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARX forecaster argument constructor — arx_args_list","text":"lags Vector List. Positive integers enumerating lags use autoregressive-type models. ahead Integer. Number time steps ahead forecast date forecasts produced. min_train_window Integer. minimal amount training data needed produce forecast. smaller, forecaster return NA predictions. levels Vector NULL. vector probabilities produce prediction intervals. created computing quantiles training residuals. NULL value result point forecasts . intercept Logical. default TRUE includes intercept forecaster. symmetrize Logical. default TRUE calculates symmetric prediction intervals. nonneg Logical. default TRUE enforeces nonnegative predictions hard-thresholding 0. quantile_by_key currently implemented","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_args_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARX forecaster argument constructor — arx_args_list","text":"list containing updated parameter choices.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_args_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARX forecaster argument constructor — arx_args_list","text":"","code":"arx_args_list() #> $lags #> [1]  0  7 14 #>  #> $ahead #> [1] 7 #>  #> $min_train_window #> [1] 20 #>  #> $levels #> [1] 0.05 0.95 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] TRUE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>  arx_args_list(symmetrize = FALSE) #> $lags #> [1]  0  7 14 #>  #> $ahead #> [1] 7 #>  #> $min_train_window #> [1] 20 #>  #> $levels #> [1] 0.05 0.95 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] FALSE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>  arx_args_list(levels = c(.1, .3, .7, .9), min_train_window = 120) #> $lags #> [1]  0  7 14 #>  #> $ahead #> [1] 7 #>  #> $min_train_window #> [1] 120 #>  #> $levels #> [1] 0.1 0.3 0.7 0.9 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] TRUE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>"},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_forecaster.html","id":null,"dir":"Reference","previous_headings":"","what":"AR forecaster with optional covariates — arx_forecaster","title":"AR forecaster with optional covariates — arx_forecaster","text":"AR forecaster optional covariates","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_forecaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AR forecaster with optional covariates — arx_forecaster","text":"","code":"arx_forecaster(x, y, key_vars, time_value, args = arx_args_list())"},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_forecaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AR forecaster with optional covariates — arx_forecaster","text":"x Covariates. Allowed missing (resulting AR y). y Response. key_vars Factor(s). prediction made unique combination. time_value time value associated row measurements. args Additional arguments specifying forecasting task. Created calling arx_args_list().","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/arx_forecaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AR forecaster with optional covariates — arx_forecaster","text":"data frame point (optionally interval) forecasts single ahead (unique horizon) unique combination key_vars.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/assign_arg_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign argument list to inside an environment — assign_arg_list","title":"Assign argument list to inside an environment — assign_arg_list","text":"function similar attach() without need detach. Calling beginning forecaster makes members arg_list available inside forecaster ugly args$member syntax.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/assign_arg_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign argument list to inside an environment — assign_arg_list","text":"","code":"assign_arg_list(l, env = parent.frame())"},{"path":"https://cmu-delphi.github.io/epipredict/reference/assign_arg_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign argument list to inside an environment — assign_arg_list","text":"l List named arguments. env environment args assigned. default goes calling environment.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/assign_arg_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign argument list to inside an environment — assign_arg_list","text":"Nothing returned. Called side effects.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/assign_arg_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign argument list to inside an environment — assign_arg_list","text":"","code":"if (FALSE) {   rm(list = ls())   l <- list(a=1, b=c(12, 10), ff = function() -5)   assign_arg_list(l)   a }"},{"path":"https://cmu-delphi.github.io/epipredict/reference/create_lags_and_leads.html","id":null,"dir":"Reference","previous_headings":"","what":"Create lags and leads of predictors and response — create_lags_and_leads","title":"Create lags and leads of predictors and response — create_lags_and_leads","text":"Create lags leads predictors response","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/create_lags_and_leads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create lags and leads of predictors and response — create_lags_and_leads","text":"","code":"create_lags_and_leads(x, y, xy_lags, y_leads, time_value, key_vars = NULL)"},{"path":"https://cmu-delphi.github.io/epipredict/reference/create_lags_and_leads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create lags and leads of predictors and response — create_lags_and_leads","text":"x Data frame matrix. Predictor variables. May missing. y Response vector. Typical usage \"lead\" y number steps forward prediction horizon (ahead). xy_lags Vector list. vector, lags apply column x y. list, must length ncol(x)+1 component apply requisite predictor. NULL list element remove variable completely result. Negative values \"lead\" variable. y_leads Scalar vector. scalar, \"lead\" y amount. vector produce multiple columns y useful model. Negative values \"lag\" variable. time_value Vector time values data observed key_vars Factors representing different groups. May NULL (default).","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/create_lags_and_leads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create lags and leads of predictors and response — create_lags_and_leads","text":"data.frame.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/create_lags_and_leads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create lags and leads of predictors and response — create_lags_and_leads","text":"","code":"x <- 1:20 y <- -20:-1 time_value <- c(1:18, 20, 21) create_lags_and_leads(x, y, c(1, 2), 1, time_value) #> # A tibble: 24 × 7 #>    keys  time_value    y1    x1    x2    x3    x4 #>    <chr>      <dbl> <int> <int> <int> <int> <int> #>  1 empty          0   -20    NA    NA    NA    NA #>  2 empty          1   -19    NA    NA    NA    NA #>  3 empty          2   -18     1    NA   -20    NA #>  4 empty          3   -17     2     1   -19   -20 #>  5 empty          4   -16     3     2   -18   -19 #>  6 empty          5   -15     4     3   -17   -18 #>  7 empty          6   -14     5     4   -16   -17 #>  8 empty          7   -13     6     5   -15   -16 #>  9 empty          8   -12     7     6   -14   -15 #> 10 empty          9   -11     8     7   -13   -14 #> # … with 14 more rows create_lags_and_leads(x, y, list(c(1, 2), 1), 1, time_value) #> # A tibble: 24 × 6 #>    keys  time_value    y1    x1    x2    x3 #>    <chr>      <dbl> <int> <int> <int> <int> #>  1 empty          0   -20    NA    NA    NA #>  2 empty          1   -19    NA    NA    NA #>  3 empty          2   -18     1    NA   -20 #>  4 empty          3   -17     2     1   -19 #>  5 empty          4   -16     3     2   -18 #>  6 empty          5   -15     4     3   -17 #>  7 empty          6   -14     5     4   -16 #>  8 empty          7   -13     6     5   -15 #>  9 empty          8   -12     7     6   -14 #> 10 empty          9   -11     8     7   -13 #> # … with 14 more rows create_lags_and_leads(x, y, list(c(-1, 1), NULL), 1, time_value) #> # A tibble: 23 × 5 #>    keys  time_value    y1    x1    x2 #>    <chr>      <dbl> <int> <int> <int> #>  1 empty          0   -20     1    NA #>  2 empty          1   -19     2    NA #>  3 empty          2   -18     3     1 #>  4 empty          3   -17     4     2 #>  5 empty          4   -16     5     3 #>  6 empty          5   -15     6     4 #>  7 empty          6   -14     7     5 #>  8 empty          7   -13     8     6 #>  9 empty          8   -12     9     7 #> 10 empty          9   -11    10     8 #> # … with 13 more rows create_lags_and_leads(x, y, c(1, 2), c(0, 1), time_value) #> # A tibble: 24 × 8 #>    keys  time_value    y1    y2    x1    x2    x3    x4 #>    <chr>      <dbl> <int> <int> <int> <int> <int> <int> #>  1 empty          1   -20   -19    NA    NA    NA    NA #>  2 empty          2   -19   -18     1    NA   -20    NA #>  3 empty          3   -18   -17     2     1   -19   -20 #>  4 empty          4   -17   -16     3     2   -18   -19 #>  5 empty          5   -16   -15     4     3   -17   -18 #>  6 empty          6   -15   -14     5     4   -16   -17 #>  7 empty          7   -14   -13     6     5   -15   -16 #>  8 empty          8   -13   -12     7     6   -14   -15 #>  9 empty          9   -12   -11     8     7   -13   -14 #> 10 empty         10   -11   -10     9     8   -12   -13 #> # … with 14 more rows"},{"path":"https://cmu-delphi.github.io/epipredict/reference/df_mat_mul.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply columns of a data.frame by a matrix — df_mat_mul","title":"Multiply columns of a data.frame by a matrix — df_mat_mul","text":"Multiply columns data.frame matrix","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/df_mat_mul.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply columns of a data.frame by a matrix — df_mat_mul","text":"","code":"df_mat_mul(dat, mat, out_names = \"out\", ...)"},{"path":"https://cmu-delphi.github.io/epipredict/reference/df_mat_mul.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply columns of a data.frame by a matrix — df_mat_mul","text":"dat data.frame mat matrix out_names Character vector. Creates names resulting columns multiplication. scalar, treated prefix remaining columns numbered sequentially. ... <tidy-select> One unquoted expressions separated commas. Variable names can used positions data frame, expressions like x:y can used select range variables.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/df_mat_mul.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply columns of a data.frame by a matrix — df_mat_mul","text":"data.frame new columns right. Original columns removed.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/df_mat_mul.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply columns of a data.frame by a matrix — df_mat_mul","text":"","code":"df <- data.frame(matrix(1:200, ncol = 10)) mat <- matrix(1:10, ncol = 2) df_mat_mul(df, mat, \"z\", dplyr::num_range(\"X\", 2:6)) #>    X1  X7  X8  X9 X10   z1   z2 #> 1   1 121 141 161 181 1115 2640 #> 2   2 122 142 162 182 1130 2680 #> 3   3 123 143 163 183 1145 2720 #> 4   4 124 144 164 184 1160 2760 #> 5   5 125 145 165 185 1175 2800 #> 6   6 126 146 166 186 1190 2840 #> 7   7 127 147 167 187 1205 2880 #> 8   8 128 148 168 188 1220 2920 #> 9   9 129 149 169 189 1235 2960 #> 10 10 130 150 170 190 1250 3000 #> 11 11 131 151 171 191 1265 3040 #> 12 12 132 152 172 192 1280 3080 #> 13 13 133 153 173 193 1295 3120 #> 14 14 134 154 174 194 1310 3160 #> 15 15 135 155 175 195 1325 3200 #> 16 16 136 156 176 196 1340 3240 #> 17 17 137 157 177 197 1355 3280 #> 18 18 138 158 178 198 1370 3320 #> 19 19 139 159 179 199 1385 3360 #> 20 20 140 160 180 200 1400 3400"},{"path":"https://cmu-delphi.github.io/epipredict/reference/epi_shift.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift predictors while maintaining grouping and time_value ordering — epi_shift","title":"Shift predictors while maintaining grouping and time_value ordering — epi_shift","text":"lower-level function. performs error checking.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/epi_shift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift predictors while maintaining grouping and time_value ordering — epi_shift","text":"","code":"epi_shift(x, lags, time_value, keys = NULL, out_name = \"x\")"},{"path":"https://cmu-delphi.github.io/epipredict/reference/epi_shift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift predictors while maintaining grouping and time_value ordering — epi_shift","text":"x Data frame. Variables lag lags List. list element vector lags. Negative values produce leads. list length number columns x. time_value Vector. length x giving time stamps. keys Data frame, vector, NULL. Additional grouping vars. out_name Chr. output list use prefix.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/epi_shift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift predictors while maintaining grouping and time_value ordering — epi_shift","text":"list tibbles","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/get_precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the precision of a number — get_precision","title":"Determine the precision of a number — get_precision","text":"Determine precision number, number digits past decimal point.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/get_precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the precision of a number — get_precision","text":"","code":"get_precision(x, ...)"},{"path":"https://cmu-delphi.github.io/epipredict/reference/get_precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the precision of a number — get_precision","text":"x numeric vector ... Ignore ","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/get_precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the precision of a number — get_precision","text":"vector integers, number digits (last non-zero digit) past decimal point.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/get_precision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the precision of a number — get_precision","text":"number expressed scientific notation, take number digits","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names from a data frame via tidy select — grab_names","title":"Get the names from a data frame via tidy select — grab_names","text":"Given data.frame, use <tidy-select> syntax choose variables. Return names variables","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names from a data frame via tidy select — grab_names","text":"","code":"grab_names(dat, ...)"},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names from a data frame via tidy select — grab_names","text":"dat data.frame ... <tidy-select> One unquoted expressions separated commas. Variable names can used positions data frame, expressions like x:y can used select range variables.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names from a data frame via tidy select — grab_names","text":"character vector","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the names from a data frame via tidy select — grab_names","text":"internal function, checks performed.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/grab_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names from a data frame via tidy select — grab_names","text":"","code":"df <- data.frame(a = 1, b = 2, cc = rep(NA, 3)) grab_names(df, dplyr::starts_with(\"c\")) #> [1] \"cc\""},{"path":"https://cmu-delphi.github.io/epipredict/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cmu-delphi.github.io/epipredict/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_args_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","title":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","text":"Constructs list arguments smooth_arx_forecaster().","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_args_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","text":"","code":"smooth_arx_args_list(   lags = c(0, 7, 14),   ahead = 1:28,   degree = 4,   kronecker_version = FALSE,   min_train_window = 20,   levels = c(0.05, 0.95),   intercept = TRUE,   symmetrize = TRUE,   nonneg = TRUE,   quantile_by_key = FALSE )"},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_args_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","text":"lags Vector List. Positive integers enumerating lags use autoregressive-type models. ahead Integer. Number time steps ahead forecast date forecasts produced. degree Integer. Order orthodonal polynomials use smoothing. strictly less length(ahead). kronecker_version Logical. ensure \"seen\" latest ahead value. default FALSE computationally simpler uses less recent data. min_train_window Integer. minimal amount training data needed produce forecast. smaller, forecaster return NA predictions. levels Vector NULL. vector probabilities produce prediction intervals. created computing quantiles training residuals. NULL value result point forecasts . intercept Logical. default TRUE includes intercept forecaster. symmetrize Logical. default TRUE calculates symmetric prediction intervals. nonneg Logical. default TRUE enforeces nonnegative predictions hard-thresholding 0. quantile_by_key currently implemented.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_args_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","text":"list containing updated parameter choices.","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_args_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth ARX forecaster argument constructor — smooth_arx_args_list","text":"","code":"smooth_arx_args_list() #> $lags #> [1]  0  7 14 #>  #> $ahead #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 #>  #> $degree #> [1] 4 #>  #> $min_train_window #> [1] 20 #>  #> $kronecker_version #> [1] FALSE #>  #> $levels #> [1] 0.05 0.95 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] TRUE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>  smooth_arx_args_list(symmetrize = FALSE) #> $lags #> [1]  0  7 14 #>  #> $ahead #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 #>  #> $degree #> [1] 4 #>  #> $min_train_window #> [1] 20 #>  #> $kronecker_version #> [1] FALSE #>  #> $levels #> [1] 0.05 0.95 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] FALSE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>  smooth_arx_args_list(levels = c(.1, .3, .7, .9), min_train_window = 120) #> $lags #> [1]  0  7 14 #>  #> $ahead #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 #>  #> $degree #> [1] 4 #>  #> $min_train_window #> [1] 120 #>  #> $kronecker_version #> [1] FALSE #>  #> $levels #> [1] 0.1 0.3 0.7 0.9 #>  #> $intercept #> [1] TRUE #>  #> $symmetrize #> [1] TRUE #>  #> $nonneg #> [1] TRUE #>  #> $max_lags #> [1] 14 #>"},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_forecaster.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth AR forecaster with optional covariates — smooth_arx_forecaster","title":"Smooth AR forecaster with optional covariates — smooth_arx_forecaster","text":"Smooth AR forecaster optional covariates","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_forecaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth AR forecaster with optional covariates — smooth_arx_forecaster","text":"","code":"smooth_arx_forecaster(   x,   y,   key_vars,   time_value,   args = smooth_arx_args_list() )"},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_forecaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth AR forecaster with optional covariates — smooth_arx_forecaster","text":"x Covariates. Allowed missing (resulting AR y). y Response. key_vars Factor(s). prediction made unique combination. time_value time value associated row measurements. args Additional arguments specifying forecasting task. Created calling smooth_arx_args_list().","code":""},{"path":"https://cmu-delphi.github.io/epipredict/reference/smooth_arx_forecaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth AR forecaster with optional covariates — smooth_arx_forecaster","text":"data frame point (optionally interval) forecasts across multiple aheads unique combination key_vars.","code":""}]
