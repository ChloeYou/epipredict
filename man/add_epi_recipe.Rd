% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epi_recipe.R
\name{add_epi_recipe}
\alias{add_epi_recipe}
\title{Add an epi_recipe to a workflow}
\usage{
add_epi_recipe(x, recipe, ..., blueprint = default_epi_recipe_blueprint())
}
\arguments{
\item{x}{A workflow or epi_workflow}

\item{recipe}{A recipe created using \code{\link[recipes:recipe]{recipes::recipe()}}}

\item{...}{Not used.}

\item{blueprint}{A hardhat blueprint used for fine tuning the preprocessing.

\code{\link[=default_epi_recipe_blueprint]{default_epi_recipe_blueprint()}} is used.

Note that preprocessing done here is separate from preprocessing that
might be done automatically by the underlying model.}
}
\value{
\code{x}, updated with a new recipe preprocessor.
}
\description{
Add an epi_recipe to a workflow
}
\details{
Has the same behaviour as \code{\link[workflows:add_recipe]{workflows::add_recipe()}} but sets a different
default blueprint to automatically handle \link[epiprocess:epi_df]{epiprocess::epi_df} data.
}
\examples{
library(magrittr)

recipe <- epi_recipe(mpg ~ cyl, mtcars) \%>\%
  step_log(cyl)

workflow <- epi_workflow() \%>\%
  add_epi_recipe(recipe)

workflow

}
\seealso{
\code{\link[workflows:add_recipe]{workflows::add_recipe()}}
\itemize{
\item \code{add_recipe()} specifies the terms of the model and any preprocessing that
is required through the usage of a recipe.
\item \code{remove_recipe()} removes the recipe as well as any downstream objects
}
}
